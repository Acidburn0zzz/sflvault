Steps to perform when releasing SFLvault
========================================

* Modify setup.py and change the version number

* Make sure the MINIMAL_CLIENT_VERSION in controllers/xmlrpc.py is appropriate,
  to ensure backwards compatibility.

* Modify `common/sflvault/common/__init__.py` to HIDE deprecation warnings.

* Commit the release commit INCLUDING the Release Notes inside that commit.
  Note all new features and fixes.

* Update the debian/changelog with the same information as in the Release
  commit.

* Step OUTSIDE of the virtualenv, with `deactivate` (otherwise, your virtenv's path will go in the `sflvault` executable file)

* For each module, SFLvault-common, SFLvault-server, SFLvault-client and
  SFLvault-client-qt:
  
  $ python setup.py sdist 
  $ python setup.py sdist upload    # prepend "register" the first time

* For WINDOWS distribution, under the WINDOWS Platform:

  Checkout the project

  $ cd client-qt
  $ python.exe setup.py bdist_wininst
  $ cd ..\client
  $ python.exe setup.py bdist_wininst
  $ cd ..\common
  $ python.exe setup.py bdist_wininst

  Packages will be under pkg/dist/

* Prepare the Debian packages:

  $ for path in common client client-qt
  do
    cd $path
    debuild -S -sa -kFDFE4451
    cd ..
  done
  $ 

* Upload Debian packages:

  $ for file in *_source.changes
  do
    dput ppa:savoirfairelinux/sflvault $file
  done

* Modify `common/sflvault/common/__init__.py` to SHOW deprecation warnings again.



Update documentation
--------------------

* Modify the UpgradePath page with everything required to upgrade.

* Modify the wiki's front-page to announce it.
  Link to the commit as "Release notes"

* Tag the commit with the version number

* Push with tags:

  git push --tags

* Announce by other means, IRC, Freshmeat, Slashdot, etc...

* Have another commit to RE-ENABLE deprecation warnings for development.

